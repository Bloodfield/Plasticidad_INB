#!/bin/bash
# Run job through bash shell
#$ -S /bin/bash
#
# Your job name
#$ -N SRA_pipe_download
#
# Use current working directory
#$ -cwd
#
# Join stdout and stderr
#$ -j y
#
# Send an email after the job has finished
#$ -m e
#$ -M echavezaparicio@gmail.com
#
# If modules are needed, source modules environment (Do not delete the next line):
. /etc/profile.d/modules.sh

##---------------------------------------------------------
#   DESCRIPCIÓN
#   
#   Este programa crea lo necesario para descargar los fastq y alinearlos
#   Obtiene el sra y los programas para descargar los split files
#   las partes están calculadas en segmentos de 900 000 000 reads
#   Crea programas intermedios que revisan la integridad de los archivos
#   
#   Importante:
#   Se tiene que ejecutar dentro de la carpeta ${name}_file
#   Si no eres Edgar Iván Chávez Aparicio, Edita:
#           la parte de arriba ^ (lineas 2-16)
#           la parte de abajo  v (linea 71,77)
#
#   Antes de Usar:
#	Tiene que estar el genoma de referencia
#		con su Índce de segemehl
#	Tiene que estar la carpeta ${name}_file, con éste script dentro
#
#   IN:
#       name			=	nombre de acceso del SRA
#       n_spots			=	numero de spots leidos (segun SRA)
#       n_threads		=	numero de hilos para usar en el alineamiento
#       quality_treshold	=	Phred mínimo para la edición de fasta
#	bases_treshold		=	Número de bases mínimo por read
#       HOME			=	Carpeta de Trabajo (dondo se encuentra el Indx de segemehl y la subcarpeta ${name}_file)
#       GenomaRef		=	Dirección del archivo de genoma de referencia para el alineamiento
#	IdxSegemehl		=	Nombre del Índce de genoma de segemehl
#   
#   OUT:
#       DumpANDtest.sge		=	sge listo para obtener los comprimidos
#       Edit_Phred.sge		=	sge para editar por medio de fastx
#       Alignment.sge		=	sge listo para ejecutar de alineamiento
#	${name}.sra		=	Archivo descargado de SRA
##---------------------------------------------------------

##---------------------------------------------------------
#   TO DO LIST
#   
#   Variable de n_part_spots
#   Dependencias de programas
##---------------------------------------------------------


##---------------------------------------------------------
#   Guía de uso
#	1.	Obtén el genoma de referencia y construye su índice de segemehl
#		Los datos de su ubicación los necesitarás para los siguientes pasos
#	2.	Crea el foder que se va a usar para descargar y analizar los datos
#		Tiene que estar en tu carpeta que llames HOME,
#			Una alternativa es usar otra carpeta, y redefinirla en el paso que sigue
#		El nombre del folder tiene que ser ${name}_file
#	2.	Modifica "ZONA DE CONFIGURACIÓN" con los valores requeridos
#	3.	Has el summit de éste sga desde el folder "${name}_file"
#		$ qsub SRA_pipe_download.sge
#	4.	Corre los otros scripts. Estan configurados bajo los parámetros del punto 2
##---------------------------------------------------------


########    ZONA DE CONFIGURACIÓN

name="SRR822843"
n_spots="256263009"
n_threads="16"
quality_treshold="20"
bases_treshold="20"

#Dirección padre de los archivos a usar (aquí debe estar el indice de segemehl)
HOME="/mnt/Timina/mhernandez/echavez"
#Dirección del genoma de referencia a usar
GenomaRef="/mnt/Archives/genome/human/hg38/UCSC/Homo_sapiens/UCSC/hg38/Sequence/WholeGenomeFasta/genome.fa"
#Dirección del Índce de segemehl
IdxSegemehl="$HOME/Idx_Human.idx"
#Tu correo para ser avisado
email="echavezaparicio@gmail.com"

########    ZONA DE SCRIPT

#   Descarga del SRA

wget ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByRun/sra/${name:0:3}/${name:0:6}/$name/$name.sra

echo $name downloaded

#   fastq-dump

printf "#!/bin/bash
#\n#$ -S /bin/bash
#\n#$ -N DumpANDtest
#\n#$ -cwd
#\n#$ -j y
#\n#$ -m e
#\n#$ -M $email
. /etc/profile.d/modules.sh
#
module load sra
module load fastqc

export HOME=$HOME

echo init

# Obtener los archivos del .sra

fastq-dump -split-files -gzip -O $HOME/${name}_file $HOME/${name}_file/$name.sra

# Control de errores

echo gzip tail de ${name}_1
zcat ${name}_1.fastq.gz | tail -n40 > tail_1.txt

echo gzip tail de ${name}_2
zcat ${name}_2.fastq.gz | tail -n40 > tail_2.txt

# Revisa los comprimidos, si estan bien, -> fastqc

gz_test=\$( gunzip -t ${name}_1.fastq.gz)

echo \"gz_test 1 \"
echo \$gz_test
if [[ -z \"\$gz_test\" ]]
\t then

\t echo qc 1
\t fastqc ${name}_1.fastq.gz

fi \n

gz_test=\$( gunzip -t ${name}_2.fastq.gz)

echo \"gz_test 2 \"
echo \$gz_test
if [[ -z \"\$gz_test\" ]]
\t then

\t echo qc 2
\t fastqc ${name}_2.fastq.gz

fi \n

echo end

" > $HOME/${name}_file/DumpANDtest.sge


echo DumpANDtest creado


#   Creación del programa de Edición
printf " #!/bin/bash
#\n#$ -S /bin/bash
#\n#$ -N Edit_Phred
#\n#$ -cwd
#\n#$ -j y
#\n#$ -m e
#\n#$ -M $email
. /etc/profile.d/modules.sh
#
########    Config Zone

name=\"${name}\" 

########    Script zone
module load gcc/5.1.0
module load fastx
module load fastqc
module load seqtk

#   Curado

echo Pipe Init

#	Corte de lecturas

gunzip -c ${name}_1.fastq.gz | fastq_quality_trimmer -t $quality_treshold -z -v -l $bases_treshold -o ${name}_1_cured.fastq.gz
gunzip -c ${name}_2.fastq.gz | fastq_quality_trimmer -t $quality_treshold -z -v -l $bases_treshold -o ${name}_2_cured.fastq.gz


#	Obtencion de lecturas iguales

zcat ${name}_1_cured.fastq.gz | perl -ane 'if (m/^\@${name}\.[0-9]*/){ print substr(\${F[0]},1),\"\\\n\";}' > list.txt
seqtk subseq ${name}_2_cured.fastq.gz list.txt | gzip > ${name}_2_cured_seqtk.fastq.gz

zcat ${name}_2_cured.fastq.gz | perl -ane 'if (m/^\@${name}\.[0-9]*/){ print substr(\${F[0]},1),\"\\\n\";}' > list.txt
seqtk subseq ${name}_1_cured.fastq.gz list.txt | gzip > ${name}_1_cured_seqtk.fastq.gz


#	Fastqc para probar resultado

fastqc ${name}_1_cured_seqtk.fastq.gz
fastqc ${name}_2_cured_seqtk.fastq.gz

echo end

\n" > $HOME/${name}_file/Edit_Phred.sge

echo Edit_Phred.sge creado


#Creación del programa de alineamiento
printf "#!/bin/bash
#\n#$ -S /bin/bash
#\n#$ -N Align_S
#\n#$ -cwd
#\n#$ -j y
#\n#$ -m e
#\n#$ -M $email
. /etc/profile.d/modules.sh

module load segemehl/0.11
module load htslib/1.2.1
module load samtools

#\n#$ -pe openmpi $n_threads

#construcción de segemehl pareado con -S

echo Align Paired
segemehl.x -i ${IdxSegemehl} -S -d $GenomaRef -q ${name}_1_cured_seqtk.fastq.gz -p ${name}_2_cured_seqtk.fastq.gz -t $n_threads |  \
	samtools sort -o ${name}_sorted.bam
	samtools index ${name}_sorted.bam
> ${name}.bam

echo end

" > $HOME/${name}_file/Alignment.sge

echo Alignment.sge creado

    done
